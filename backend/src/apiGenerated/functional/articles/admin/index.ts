/**
 * @packageDocumentation
 * @module api.functional.articles.admin
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { ArticleDtoAdmin } from "../../../../api/articles/articles.controller";

/**
 * @controller ArticleControllerAdmin.getAllAdminn
 * @path GET /articles/admin
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAllAdminn(
    connection: IConnection,
): Promise<getAllAdminn.Output> {
    return PlainFetcher.fetch(
        connection,
        {
            ...getAllAdminn.METADATA,
            path: getAllAdminn.path(),
        } as const,
    );
}
export namespace getAllAdminn {
    export type Output = Primitive<Array<ArticleDtoAdmin>>;

    export const METADATA = {
        method: "GET",
        path: "/articles/admin",
        request: null,
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: null,
    } as const;

    export const path = (): string => {
        return `/articles/admin`;
    }
}