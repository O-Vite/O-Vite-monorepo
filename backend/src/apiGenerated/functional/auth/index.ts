/**
 * @packageDocumentation
 * @module api.functional.auth
 * @nestia Generated by Nestia - https://github.com/samchon/nestia 
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { TSignUpResponse } from "../../../api/auth/auth.service";
import type { LoginDto } from "../../../api/auth/dto/login.dto";
import type { RegisterDto } from "../../../api/auth/dto/register.dto";

/**
 * @controller AuthController.login
 * @path POST /auth/login
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function login(
    connection: IConnection,
    loginObj: login.Input,
): Promise<login.Output> {
    return PlainFetcher.fetch(
        {
            ...connection,
            headers: {
                ...(connection.headers ?? {}),
                "Content-Type": "application/json",
            },
        },
        {
            ...login.METADATA,
            path: login.path(),
        } as const,
        loginObj,
    );
}
export namespace login {
    export type Input = Primitive<LoginDto>;
    export type Output = Primitive<TSignUpResponse>;

    export const METADATA = {
        method: "POST",
        path: "/auth/login",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 200,
    } as const;

    export const path = (): string => {
        return `/auth/login`;
    }
}

/**
 * @controller AuthController.register
 * @path POST /auth/register
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function register(
    connection: IConnection,
    registerObj: register.Input,
): Promise<register.Output> {
    return PlainFetcher.fetch(
        {
            ...connection,
            headers: {
                ...(connection.headers ?? {}),
                "Content-Type": "application/json",
            },
        },
        {
            ...register.METADATA,
            path: register.path(),
        } as const,
        registerObj,
    );
}
export namespace register {
    export type Input = Primitive<RegisterDto>;
    export type Output = Primitive<TSignUpResponse>;

    export const METADATA = {
        method: "POST",
        path: "/auth/register",
        request: {
            type: "application/json",
            encrypted: false
        },
        response: {
            type: "application/json",
            encrypted: false,
        },
        status: 201,
    } as const;

    export const path = (): string => {
        return `/auth/register`;
    }
}